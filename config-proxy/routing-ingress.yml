#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")
---
apiVersion: v1
data: #@ data.values.tap.credentials.certificate
kind: Secret
metadata:
  name: tls
  namespace: learningcenter
type: kubernetes.io/tls
---
apiVersion: v1
data: #@ data.values.tap.credentials.certificate
kind: Secret
metadata:
  name: tls
  namespace: #@ data.values.tls.namespace
type: kubernetes.io/tls
---
apiVersion: projectcontour.io/v1
kind: TLSCertificateDelegation
metadata:
  name: contour-delegation
  namespace: #@ data.values.tls.namespace
  annotations:
    kapp.k14s.io/change-rule: "upsert after upserting tap-install/tap"
spec:
  delegations:
    - secretName: #@ data.values.tls.secretName
      targetNamespaces:
        - "*"
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: accelerator
  namespace: accelerator-system
  annotations:
    kapp.k14s.io/change-rule: "upsert after upserting tap-install/tap"
spec:
  virtualhost:
    fqdn: #@ "accelerator.{}".format(data.values.domain)
    tls:
      secretName: #@ "{}/{}".format(data.values.tls.namespace,data.values.tls.secretName)
  routes:
    - services:
        - name: acc-server
          port: 80
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  annotations:
    projectcontour.io/ingress.class: contour-external
    kapp.k14s.io/change-rule: "upsert after upserting tap-install/tap"
  labels:
    projectcontour.io/ingress.class: contour-external
  name: api-portal-external
  namespace: api-portal
spec:
  routes:
    - conditions:
        - prefix: /
      services:
        - name: api-portal-server
          port: 8080
  virtualhost:
    fqdn: #@ "api-portal.{}".format(data.values.domain)
    tls:
      secretName: #@ "{}/{}".format(data.values.tls.namespace,data.values.tls.secretName)
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: learningcenter
  namespace: learning-center-guided-ui
  annotations:
    kapp.k14s.io/change-rule: "upsert after upserting tap-install/tap"
spec:
  virtualhost:
    fqdn: #@ "learningcenter.{}".format(data.values.domain)
    tls:
      secretName: #@ "{}/{}".format(data.values.tls.namespace,data.values.tls.secretName)
  routes:
    - services:
        - name: learningcenter-portal
          port: 8080
---